<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CC_Callscript_Control" xml:space="preserve">
    <value>Kontrolka skryptu agenta</value>
    <comment>Agent script control name</comment>
  </data>
  <data name="CC_FieldControl" xml:space="preserve">
    <value>Właściwość skryptu agenta</value>
    <comment>Input property name</comment>
  </data>
  <data name="CC_FieldControl_Desc" xml:space="preserve">
    <value>Właściwość skryptu agenta</value>
    <comment>Input property description</comment>
  </data>
  <data name="CompletedMacroStep_AccessibilityLabel" xml:space="preserve">
    <value>Krok makra {0} został zakończony pomyślnie.</value>
    <comment>When macro execution step completed successfully</comment>
  </data>
  <data name="CompletedScriptStep_AccessibilityLabel" xml:space="preserve">
    <value>Krok skryptu {0} został zakończony pomyślnie.</value>
    <comment>When script step loading completed successfully</comment>
  </data>
  <data name="CompletedTextStep_AccessibilityLabel" xml:space="preserve">
    <value>Krok instrukcji tekstowej {0} został zakończony pomyślnie.</value>
    <comment>When text instruction step completed successfully</comment>
  </data>
  <data name="ControlHeader" xml:space="preserve">
    <value>Skrypty agenta</value>
    <comment>Header value for callscript control</comment>
  </data>
  <data name="ControlHeaderInfo" xml:space="preserve">
    <value>Skrypty agenta pomagają dokładnie i efektywnie pracować, a jednocześnie szybciej i wydajniej obsługiwać klientów</value>
    <comment>Info value for callscript control</comment>
  </data>
  <data name="FailedMacroStep_AccessibilityLabel" xml:space="preserve">
    <value>Wykonywanie kroku makra {0} nie powiodło się.</value>
    <comment>When macro execution step failed</comment>
  </data>
  <data name="FailedScriptStep_AccessibilityLabel" xml:space="preserve">
    <value>Wykonywanie kroku skryptu {0} nie powiodło się.</value>
    <comment>When script step loading fails</comment>
  </data>
  <data name="FailedTextStep_AccessibilityLabel" xml:space="preserve">
    <value>Wykonywanie kroku instrukcji tekstowej {0} nie powiodło się.</value>
    <comment>When text instruction step failed</comment>
  </data>
  <data name="InitialScriptDataLoadFailure" xml:space="preserve">
    <value>Nie utworzono skryptów agenta lub nie można ich załadować. Skontaktuj się z administratorem.</value>
    <comment>Generic error message when initial script data load fails</comment>
  </data>
  <data name="LoadButtonLabel" xml:space="preserve">
    <value>Załaduj</value>
    <comment>Button label for Load button</comment>
  </data>
  <data name="LoadingText" xml:space="preserve">
    <value>Trwa ładowanie...</value>
    <comment>Loading text to show when data fetch is in progress</comment>
  </data>
  <data name="MacroStepFailure_AccessibilityMessage" xml:space="preserve">
    <value>Wykonywanie makra nie powiodło się dla kroku {0}. Skontaktuj się z administratorem.</value>
    <comment>Screen reader message when macro execution failed</comment>
  </data>
  <data name="MacroStepFailure_ErrorMessageWithError" xml:space="preserve">
    <value>Wykonywanie makra nie powiodło się.</value>
    <comment>Error message to show when macro execution failed</comment>
  </data>
  <data name="MacroStepFailure_ErrorMessageWithoutError" xml:space="preserve">
    <value>Wykonywanie makra nie powiodło się. Skontaktuj się z administratorem.</value>
    <comment>Generic error message to show when macro execution failed</comment>
  </data>
  <data name="MacroStepSuccess_AccessibilityMessage" xml:space="preserve">
    <value>Wykonywanie makra zostało zakończone dla kroku {0}.</value>
    <comment>Screen reader message when macro execution successful</comment>
  </data>
  <data name="NoCallScriptFoundErrorMessage" xml:space="preserve">
    <value>Brak skryptów agenta połączonych z bieżącą sesją</value>
    <comment>Error message when no agent scripts are linked with session template</comment>
  </data>
  <data name="ScriptActionStepLabel" xml:space="preserve">
    <value>Załaduj skrypt</value>
    <comment>Label for script action step</comment>
  </data>
  <data name="ScriptCombobox_EmptyOption" xml:space="preserve">
    <value>Wybierz skrypt</value>
    <comment>Label for empty option in script select combobox</comment>
  </data>
  <data name="ScriptStepsDataLoadFailure" xml:space="preserve">
    <value>Nie możemy załadować szczegółów skryptu agenta. Skontaktuj się z administratorem.</value>
    <comment>Generic error message when script steps data load fails</comment>
  </data>
  <data name="SlugResolutionFailure" xml:space="preserve">
    <value>Nie można rozpoznać parametru wymiennego w kroku {0}. Skontaktuj się z administratorem.</value>
    <comment>Error message when slug resolution fails</comment>
  </data>
  <data name="StepExecutionBtn_LabelForCompletedStep" xml:space="preserve">
    <value>Uruchom ponownie</value>
    <comment>Button text to prompt user to execute a completed step again</comment>
  </data>
  <data name="StepExecutionBtn_LabelForFailedStep" xml:space="preserve">
    <value>Ponów próbę</value>
    <comment>Button text to prompt user to retry a failed step</comment>
  </data>
  <data name="StepExecutionBtn_LabelForNotExecutedStep" xml:space="preserve">
    <value>Uruchom</value>
    <comment>Button text to prompt user to execute a step</comment>
  </data>
  <data name="StepExecutionBtn_LabelForStepInProgress" xml:space="preserve">
    <value>Uruchomiono...</value>
    <comment>Disabled button text to be displayed on a step in progress</comment>
  </data>
  <data name="StepExeutionBtn_LabelForRouteAction" xml:space="preserve">
    <value>Wyświetl</value>
    <comment>Button text to prompt user to view configured route callscript</comment>
  </data>
  <data name="StepExeutionBtn_LabelForTextAction" xml:space="preserve">
    <value>Oznacz jako wykonane</value>
    <comment>Button text to Mark a text step as done</comment>
  </data>
  <data name="StepListItem_UnexecutedMacroStepAccessibilityLabel" xml:space="preserve">
    <value>Krok makra {0}.</value>
    <comment>Text to be read by screen-reader on callscript step focus</comment>
  </data>
  <data name="StepListItem_UnexecutedRouteStepAccessibilityLabel" xml:space="preserve">
    <value>Krok skryptu {0}.</value>
    <comment>Text to be read by screen-reader on callscript step focus</comment>
  </data>
  <data name="StepListItem_UnexecutedTextStepAccessibilityLabel" xml:space="preserve">
    <value>Krok instrukcji tekstowej {0}.</value>
    <comment>Text to be read by screen-reader on callscript step focus</comment>
  </data>
  <data name="NoDataCallScriptMessage" xml:space="preserve">
    <value>Nie znaleziono powiązanych skryptów agenta.</value>
    <comment>Error message when no relative agent scripts are linked with session template</comment>
  </data>
  <data name="SlugResolutionErrorMessage" xml:space="preserve">
    <value>Brak identyfikatora encji w zapytaniu</value>
    <comment>Error message when there is a slug resolution error</comment>
  </data>
  <data name="SelectAgentScript_ComboboxLabel" xml:space="preserve">
    <value>Wybierz skrypt agenta</value>
    <comment>Text to define the combobox name as select agent script and it will only be read by screen-reader on combobox focus</comment>
  </data>
</root>