environment:
  host:
    os: 'windows'
    flavor: 'server'
    version: '2019'
  runtime:
    provider: 'appcontainer'
    image: 'cdpxwinrs5.azurecr.io/global/vse2019/16.3.7:latest'
    source_mode: map

restore:
  commands:
    - !!defaultcommand
      name: 'Restore Node'
      command: 'src\WindowsServerSample\Node\restore.cmd'
    - !!defaultcommand
      name: 'Restore Node'
      command: 'src\WindowsServerSample\AzureDevOpsExtension\restore.cmd'

build:
  commands:
    - !!buildcommand
      name: 'Build Node'
      fail_on_stderr: false
      command: 'src\WindowsServerSample\Node\officialBuild.cmd'
      artifacts:
        - from: 'src\WindowsServerSample\Node\oe-template'
          to: 'Node'
          include:
            - 'build/'
          signing_options:
            sign_inline: true
    - !!buildcommand
      name: 'Build Node'
      fail_on_stderr: false
      command: 'src\WindowsServerSample\AzureDevOpsExtension\build.cmd'
      artifacts:
        - from: 'src\WindowsServerSample\AzureDevOpsExtension\'
          to: 'AzureDevOpsExtension'
          include:
            - '**/*.vsix'
          signing_options:
            sign_inline: true

package:
  commands:
    - !!dockerbuildcommand                                 # REQUIRED: This maps the command data to a concrete type in the CDPX orchestrator.
      name: 'Build Docker Sample'                            # REQUIRED: All commands have a name field. All console output captured when 
                                                          #           this command runs is tagged with the value of this field.
      context_folder: 'src/DockerBuildExample/Windows'                    # REQUIRED: The repository root relative path of the folder containing the Dockerfile to build. 
                                                          # In effect, the context folder will be repository_checkout_folder/src/DockerFinal.
      dockerfile_name: 'Dockerfile'                    # OPTIONAL: The name of the dockerfile. Docker client does allow the Dockerfile 
                                                          # to be named differently. Defaults to Dockerfile.
                                                          # In effect, the -f option value passed to docker build will be repository_checkout_folder/src/DockerFinal/Foo.dockerfile.
      repository_name: 'cdpx-user-samples'                       # REQUIRED: The name of the image repository. Final repository name will be registry/artifact/service-tree-id/cdpx/sample.
      tag: '1.0.0alpha'                                    # OPTIONAL: Defaults to latest. The tag for the built image. Final tag will be 1.0.0alpha, 1.0.0-timestamp-commitID.
      latest: false                                   # OPTIONAL: Defaults to false. If tag is not set to latest and this flag is set, then tag as latest as well and push latest as well.
      publish: false                                  # OPTIONAL: Defaults to true. If set to false, image will not be pushed. Useful to speed up pull requests.
      export: false                                   # DEPRECATED. Please use export_to_artifact_path instead.
      env_var_suffix: 'MYIMAGE'                            # If defined, environment variables will be emitted for each tag that is published. 
                                                          # NOTE: AT PRESENT, THERE IS NO WAY TO USE THESE VARIABLES.
                                                          # CDP_ARTIFACT_CONTAINER_IMAGE_LATEST_MYIMAGE - Will be set if latest or publish is set to true.
                                                          # CDP_ARTIFACT_CONTAINER_IMAGE_UNIQUE_MYIMAGE - Will be set if publish_unique_tag or publish is set to true.
                                                          # CDP_ARTIFACT_CONTAINER_IMAGE_BUILD_MYIMAGE - Will be set if publish_build_tag or publish is set to true.
                                                          # CDP_ARTIFACT_CONTAINER_IMAGE_FIXED_MYIMAGE - Will be set if publish_fixed_tag or publish is set to true.
      squash: false                                   # If set, the --squash argument is passed to docker build. Not recommended for use on Windows systems.
      publish_build_tag: false                        # If set, the image in the registry is tagged with the build number.
      publish_unique_tag: false                       # If set, the image in the registry is tagged with the unique tag generated by CDPx.
      publish_fixed_tag: true                        # If set, the image in the registry is tagged with the fixed tag.
      metadata_file: 
        local_path: 'context_folder\image-meta.json'       # If defined, the repository root relative path to the file into which JSON metadata about the created image is emitted.
        artifact_path: 'test\docker-image-meta.json'      # If defined, the drop outputs relative path to the file into which JSON metadata about the created image is emitted.
      export_to_artifact_path: 'images\pockers.tar.zip'    # If defined, the drop outputs relative path to the file into which the generated image is exported.
                                                          # NOTE: On Windows, the path must end with .tar.zip. 7-Zip is used to compress the TAR export from Docker.
                                                          # NOTE: On Linux, the path must end with .tar.gz. GZip is used to compress the TAR export from Docker.

test:
  commands: